{"ast":null,"code":"var _jsxFileName = \"/home/mdedijer/Desktop/SealCam/seal-cam/Frontend/src/MyApp.js\",\n    _s = $RefreshSig$();\n\n//import React from 'react';\nimport React, { useState, useEffect, useReducer } from 'react'; //import CORS from 'flask_cors';\n//import CORS from 'flask-cors';\n\nimport axios from 'axios'; //import TextField from '@mui/material/TextField';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst formReducer = (state, event) => {\n  return { ...state,\n    [event.name]: event.value\n  };\n};\n\nasync function makePostCall(date) {\n  try {\n    const response = await axios.post('http://localhost:5000/home', date);\n    return response;\n  } catch (error) {\n    console.log(error);\n    return false;\n  }\n}\n/*\nfunction updateList(date) { \n        makePostCall(date).then( result => {\n        if (result)\n           setData([date]);\n        });\n     }\n*/\n\n\nfunction MyApp() {\n  _s();\n\n  //const [data, setData] = useState([{}])\n  const [formData, setFormData] = useReducer(formReducer, {});\n  const [submitting, setSubmitting] = useState(false);\n  useEffect(() => {\n    fetch(\"/home\").then(res => res.json()).then(data => {\n      formData(data);\n      console.log(data);\n    });\n  }, []);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSubmitting(true);\n    setTimeout(() => {\n      setSubmitting(false);\n    }, 3000); //alert('You have submitted the dates.')\n  };\n\n  const handleChange = event => {\n    setFormData({\n      name: event.target.name,\n      value: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Seal Cam Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), submitting && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"You are submitting the following:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.entries(formData).map(_ref => {\n          let [name, value] = _ref;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 38\n            }, this), \" \", value]\n          }, name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 38\n            }, this), \" \", value]\n          }, name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 23\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Submit dates for NOAA data \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \" Start Date \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"start\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \" End Date \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"end\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 2\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 2\n  }, this);\n  /*\n  return (\n  <div>\n      <h1>Seal Cam Data</h1>\n  <p> Submit dates for NOAA data </p>\n  <label> Start Date </label>\n      <input type=\"date\" id=\"start\"/>\n  <label> End Date </label>\n      <input type=\"date\" id=\"end\"/>\n      <input type=\"submit\" value=\"Submit\"/>\n  </div>\n  );\n  */\n}\n\n_s(MyApp, \"amkzQd+cfh4czI3GbUIn6A8/5K4=\");\n\n_c = MyApp;\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["/home/mdedijer/Desktop/SealCam/seal-cam/Frontend/src/MyApp.js"],"names":["React","useState","useEffect","useReducer","axios","formReducer","state","event","name","value","makePostCall","date","response","post","error","console","log","MyApp","formData","setFormData","submitting","setSubmitting","fetch","then","res","json","data","handleSubmit","preventDefault","setTimeout","handleChange","target","Object","entries","map"],"mappings":"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","sourcesContent":["//import React from 'react';\nimport React, {useState, useEffect, useReducer} from 'react';\n//import CORS from 'flask_cors';\n//import CORS from 'flask-cors';\nimport axios from 'axios';\n//import TextField from '@mui/material/TextField';\n\nconst formReducer = (state, event) => {\n        return {\n          ...state,\n          [event.name]: event.value\n        }\n       }\n\n\n\nasync function makePostCall(date){\n        try {\n           const response = await axios.post('http://localhost:5000/home', date);\n           return response;\n        }\n        catch (error) {\n           console.log(error);\n           return false;\n        }\n}\n   \n/*\nfunction updateList(date) { \n        makePostCall(date).then( result => {\n        if (result)\n           setData([date]);\n        });\n     }\n*/   \nfunction MyApp() {\n   \n   //const [data, setData] = useState([{}])\n   const [formData, setFormData] = useReducer(formReducer, {});\n   const [submitting, setSubmitting] = useState(false);\n   \n   useEffect(() => {\n        fetch(\"/home\").then(\n                res => res.json()\n        ).then(\n                data => {\n                        formData(data)\n                        console.log(data)\n                }\n        )\n   }, [])\n\n   const handleSubmit = event => {\n           event.preventDefault();\n           setSubmitting(true);\n           setTimeout(() => { setSubmitting(false);}, 3000)\n           //alert('You have submitted the dates.')\n   }\n\n   const handleChange = event => {\n        setFormData({\n          name: event.target.name,\n          value: event.target.value,\n        });\n      }\n\n   return (\n\t<div>\n        <h1>Seal Cam Data</h1>\n        {submitting &&\n            <div>\n                You are submitting the following:\n                <ul>\n                   {Object.entries(formData).map(([name, value]) => (\n                      <li key={name}><strong>{name}</strong> {value}</li>,\n                      <li key={name}><strong>{name}</strong> {value}</li>\n                      ))}\n                </ul>\n            </div>}\n\t<p> Submit dates for NOAA data </p>\n\t<form onSubmit={handleSubmit}>\n           <fieldset>\n              <label> Start Date </label>\n              <input type=\"date\" name=\"start\" onChange={handleChange}/>\n\t      <label> End Date </label>\n              <input type=\"date\" name=\"end\" onChange={handleChange}/>\n           </fieldset>\n           <button type=\"submit\">Submit</button>\n        </form>\n\t</div>\n    );\n    /*\n   return (\n\t<div>\n        <h1>Seal Cam Data</h1>\n\t<p> Submit dates for NOAA data </p>\n\t<label> Start Date </label>\n        <input type=\"date\" id=\"start\"/>\n\t<label> End Date </label>\n        <input type=\"date\" id=\"end\"/>\n        <input type=\"submit\" value=\"Submit\"/>\n\t</div>\n    );\n    */\n}\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}